{"version":3,"sources":["context.js","components/layouts/Navbar.js","components/contact/Contact.js","components/contact/Contacts.js","components/layouts/InputGroup.js","components/contact/AddContact.js","components/contact/EditContact.js","pages/About.js","pages/PageNotFound.js","test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","res","data","catch","error","console","log","value","this","props","children","Component","Consumer","Navbar","branding","className","href","to","propsTypes","string","isRequired","defaultProps","Contact","onDeleteContact","delete","showContact","onShowContact","bind","name","email","phone","titleStyle","color","fontSize","fontWeight","style","onClick","cursor","float","object","Contacts","Fragment","key","InputGroup","label","placeholder","onChange","forhtml","classnames","PropTypes","func","AddContact","errors","onInputChange","e","target","formSubmit","a","preventDefault","newContact","post","history","push","onSubmit","EditContact","upData","match","params","put","About","PageNotFound","Test","title","body","posts","fetch","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fe69038e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n     switch (action.type) {\r\n          case 'DELETE_CONTACT':\r\n               return {\r\n                    ...state,\r\n                    contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n               }\r\n          case 'ADD_CONTACT':\r\n               return {\r\n                    ...state,\r\n                    contacts: [action.payload, ...state.contacts]\r\n               }\r\n          case 'UPDATE_CONTACT':\r\n               return {\r\n                    ...state,\r\n                    contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n               }\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nexport class Provider extends Component {\r\n     componentDidMount() {\r\n          axios.get('https://jsonplaceholder.typicode.com/users')\r\n               .then(res => this.setState({ contacts: res.data }))\r\n               .catch(error => console.log('Error !'));\r\n     }\r\n     state = {\r\n          contacts: [],\r\n          dispatch: action => this.setState(state => reducer(state, action))\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <Context.Provider value={this.state}>\r\n                    {this.props.children}\r\n               </Context.Provider>\r\n          );\r\n     }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport propsTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n     render() {\r\n          const { branding } = this.props\r\n\r\n          return (\r\n               <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\r\n                    <div className=\"container\">\r\n                         <a className=\"navbar-brand\" href=\"/\">{branding}</a>\r\n                         <div>\r\n                              <ul className=\"navbar-nav mr-auto\">\r\n                                   <li className=\"nav-item active\">\r\n                                        <Link className=\"nav-link\" to=\"/\">\r\n                                             <i className=\"fa fa-home mr-1\"></i>\r\n                                             Home\r\n                                             </Link>\r\n                                   </li>\r\n                                   <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/contacts/add\">\r\n                                             <i className=\"fa fa-plus mr-1\"></i>\r\n                                             Add\r\n                                             </Link>\r\n                                   </li>\r\n                                   <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/about\">\r\n                                             <i className=\"fa fa-question mr-1\"></i>\r\n                                             About\r\n                                             </Link>\r\n                                   </li>\r\n                              </ul>\r\n                         </div>\r\n                    </div>\r\n               </nav>\r\n          );\r\n     }\r\n}\r\n\r\nNavbar.propsTypes = {\r\n     branding: propsTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n     branding: 'My App'\r\n}","import React, { Component } from 'react';\r\nimport propsTypes from 'prop-types';\r\nimport './contact.css';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Contact extends Component {\r\n\r\n     static propsTypes = {\r\n          contact: propsTypes.object.isRequired,\r\n     }\r\n\r\n     constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n               showContact: false\r\n          }\r\n          this.onShowContact = this.onShowContact.bind(this);\r\n     }\r\n\r\n     onShowContact() {\r\n          this.setState({ showContact: !this.state.showContact });\r\n     }\r\n\r\n     onDeleteContact = (id, dispatch) => {\r\n          axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n               .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n     }\r\n\r\n     render() {\r\n          const { id, name, email, phone } = this.props.contact;\r\n          const titleStyle = {\r\n               color: 'green',\r\n               fontSize: '18px',\r\n               fontWeight: 'bold',\r\n          }\r\n          const { showContact } = this.state\r\n          return (\r\n               <Consumer>\r\n                    {value => {\r\n                         const { dispatch } = value;\r\n                         return (\r\n                              <div className=\"card card-body mb-2 contact\">\r\n                                   <h4 style={titleStyle}>{name}\r\n                                        <i onClick={this.onShowContact} style={{ cursor: 'pointer' }} className=\"fa fa-sort-down ml-2\"></i>\r\n\r\n\r\n\r\n                                        <i className=\"fa fa-times\" style={{ color: 'red', fontWeight: 'normal', float: 'right', cursor: 'pointer' }}\r\n                                             onClick={this.onDeleteContact.bind(this, id, dispatch)}\r\n                                        ></i>\r\n                                        <Link to={`contacts/edit/${id}`}>\r\n                                             <i className=\"fa fa-pencil mr-2\" style={{ color: 'black', fontWeight: 'normal', float: 'right', cursor: 'pointer' }}></i>\r\n                                        </Link>\r\n\r\n                                   </h4>\r\n                                   {showContact ? (<ul className=\"list-group\">\r\n                                        <li className=\"list-group-item\">Email: {email}</li>\r\n                                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                   </ul>) : null}\r\n\r\n                              </div>\r\n                         )\r\n                    }}\r\n\r\n               </Consumer>\r\n          );\r\n     }\r\n}\r\n\r\nContact.defaultProps = {\r\n     contact: {\r\n          name: 'Contact Name',\r\n          email: 'contact@mail.com',\r\n          phone: '000-0000-000'\r\n     }\r\n}","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\n\r\n\r\nimport { Consumer } from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state = {}\r\n     }\r\n     // Delete Contact Method\r\n     // deleteContact = (id) => {\r\n     //      const { contacts } = this.state;\r\n     //      const newContacts = contacts.filter(contact => contact.id !== id)\r\n     //      this.setState({ contacts: newContacts })\r\n     // }\r\n\r\n\r\n     render() {\r\n\r\n          return (\r\n               <Consumer>\r\n                    {value => {\r\n                         const { contacts } = value\r\n                         return (\r\n                              <React.Fragment>\r\n                                   <h1 className=\"display-4 mb-3\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                                   {contacts.map((contact, id) => <Contact key={id} contact={contact} />)}\r\n                              </React.Fragment>\r\n                         );\r\n                    }}\r\n               </Consumer>\r\n          );\r\n          // const { contacts } = this.state;\r\n\r\n          // return (\r\n          //      <React.Fragment>\r\n          //           {contacts.map((contact, id) => <Contact key={id} contact={contact} deleteClickHandler={this.deleteContact.bind(this, contact.id)} />)}\r\n          //      </React.Fragment>\r\n          // );\r\n     }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst InputGroup = ({\r\n     label,\r\n     type,\r\n     name,\r\n     value,\r\n     placeholder,\r\n     onChange,\r\n     error\r\n}) => {\r\n\r\n     return (\r\n          <div className=\"form-group\">\r\n               <label forhtml={name}>{label}</label>\r\n               <input type={type}\r\n                    className={classnames('form-control', {\r\n                         'is-invalid': error\r\n                    })}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={onChange} />\r\n               {error && <span style={{ color: 'red' }}>{error}</span>}\r\n          </div>\r\n     );\r\n}\r\n\r\nInputGroup.propsTypes = {\r\n     label: PropTypes.string.isRequired,\r\n     name: PropTypes.string.isRequired,\r\n     value: PropTypes.string.isRequired,\r\n     placeholder: PropTypes.string.isRequired,\r\n     onChange: PropTypes.func.isRequired,\r\n     type: PropTypes.string.isRequired\r\n}\r\nInputGroup.defaultProps = {\r\n     type: 'text'\r\n}\r\n\r\n\r\nexport default InputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from \"../../context\";\r\nimport InputGroup from '../layouts/InputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n     state = {\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n     }\r\n\r\n     // onNameChange = e => this.setState({ name: e.target.value });\r\n     // onEmailChange = e => this.setState({ email: e.target.value });\r\n     // onPhoneChange = e => this.setState({ phone: e.target.value });\r\n\r\n     onInputChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n     formSubmit = async (dispatch, e) => {\r\n          e.preventDefault();\r\n\r\n          const { name, email, phone } = this.state;\r\n\r\n          // Input Error Check\r\n          if (name === '') {\r\n               this.setState({ errors: { name: 'The Name Field is required' } });\r\n               return;\r\n          }\r\n          if (email === '') {\r\n               this.setState({ errors: { email: 'The Email Field is required' } });\r\n               return;\r\n          }\r\n          if (phone === '') {\r\n               this.setState({ errors: { phone: 'The Phone Field is required' } });\r\n               return;\r\n          }\r\n\r\n          const newContact = {\r\n               name,\r\n               email,\r\n               phone\r\n          }\r\n          const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n          dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n\r\n          // Clear Input Field\r\n          this.setState({\r\n               name: '',\r\n               email: '',\r\n               phone: '',\r\n               errors: {}\r\n          });\r\n\r\n          // Redirect \r\n          this.props.history.push(\"/\");\r\n     }\r\n\r\n\r\n\r\n     render() {\r\n          const { name, email, phone, errors } = this.state;\r\n\r\n          return (\r\n               <Consumer>\r\n                    {value => {\r\n                         const { dispatch } = value;\r\n                         return (\r\n                              <div className=\"card mb-3\">\r\n                                   <div className=\"card-header\">Add <span className=\"text-danger\">Contact</span></div>\r\n                                   <div className=\"card-body\">\r\n                                        <form onSubmit={this.formSubmit.bind(this, dispatch)}>\r\n                                             <InputGroup\r\n                                                  label=\"Name\"\r\n                                                  name=\"name\"\r\n                                                  placeholder=\"Enter Name...\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={name}\r\n                                                  error={errors.name}\r\n                                             />\r\n                                             <InputGroup\r\n                                                  label=\"Email\"\r\n                                                  name=\"email\"\r\n                                                  placeholder=\"example@company.com\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={email}\r\n                                                  error={errors.email}\r\n                                             />\r\n                                             <InputGroup\r\n                                                  label=\"Phone\"\r\n                                                  name=\"phone\"\r\n                                                  placeholder=\"000-0000-00000\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={phone}\r\n                                                  error={errors.phone}\r\n                                             />\r\n\r\n                                             <button type=\"submit\" className=\"btn btn-danger btn-block\">Submit</button>\r\n                                        </form>\r\n                                   </div>\r\n                              </div>\r\n                         )\r\n                    }}\r\n               </Consumer>\r\n          )\r\n     }\r\n\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from \"../../context\";\r\nimport InputGroup from '../layouts/InputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n\r\n\r\n     state = {\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n     }\r\n     async componentDidMount() {\r\n          let { id } = this.props.match.params;\r\n          const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n          const contact = res.data;\r\n          this.setState({\r\n               name: contact.name,\r\n               email: contact.email,\r\n               phone: contact.phone\r\n          })\r\n     }\r\n\r\n     // onNameChange = e => this.setState({ name: e.target.value });\r\n     // onEmailChange = e => this.setState({ email: e.target.value });\r\n     // onPhoneChange = e => this.setState({ phone: e.target.value });\r\n\r\n     onInputChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n     formSubmit = async (dispatch, e) => {\r\n          e.preventDefault();\r\n\r\n          const { name, email, phone } = this.state;\r\n\r\n          // Input Error Check\r\n          if (name === '') {\r\n               this.setState({ errors: { name: 'The Name Field is required' } });\r\n               return;\r\n          }\r\n          if (email === '') {\r\n               this.setState({ errors: { email: 'The Email Field is required' } });\r\n               return;\r\n          }\r\n          if (phone === '') {\r\n               this.setState({ errors: { phone: 'The Phone Field is required' } });\r\n               return;\r\n          }\r\n\r\n          const upData = {\r\n               name,\r\n               email,\r\n               phone\r\n          }\r\n\r\n          const { id } = this.props.match.params;\r\n\r\n          const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, upData);\r\n\r\n          dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n          // Clear Input Field\r\n          this.setState({\r\n               name: '',\r\n               email: '',\r\n               phone: '',\r\n               errors: {}\r\n          });\r\n\r\n          // Redirect \r\n          this.props.history.push(\"/\");\r\n     }\r\n\r\n\r\n\r\n     render() {\r\n          const { name, email, phone, errors } = this.state;\r\n\r\n          return (\r\n               <Consumer>\r\n                    {value => {\r\n                         const { dispatch } = value;\r\n                         return (\r\n                              <div className=\"card mb-3\">\r\n                                   <div className=\"card-header\">Edit <span className=\"text-danger\">Contact</span></div>\r\n                                   <div className=\"card-body\">\r\n                                        <form onSubmit={this.formSubmit.bind(this, dispatch)}>\r\n                                             <InputGroup\r\n                                                  label=\"Name\"\r\n                                                  name=\"name\"\r\n                                                  placeholder=\"Enter Name...\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={name}\r\n                                                  error={errors.name}\r\n                                             />\r\n                                             <InputGroup\r\n                                                  label=\"Email\"\r\n                                                  name=\"email\"\r\n                                                  placeholder=\"example@company.com\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={email}\r\n                                                  error={errors.email}\r\n                                             />\r\n                                             <InputGroup\r\n                                                  label=\"Phone\"\r\n                                                  name=\"phone\"\r\n                                                  placeholder=\"000-0000-00000\"\r\n                                                  onChange={this.onInputChange}\r\n                                                  value={phone}\r\n                                                  error={errors.phone}\r\n                                             />\r\n\r\n                                             <button type=\"submit\" className=\"btn btn-danger btn-block\">Update</button>\r\n                                        </form>\r\n                                   </div>\r\n                              </div>\r\n                         )\r\n                    }}\r\n               </Consumer>\r\n          )\r\n     }\r\n\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n\r\n     render() {\r\n\r\n          return (\r\n               <div className=\"about\">\r\n                    <h1 className=\"display-4\">About Contact Manager</h1>\r\n                    <p className=\"lead\">Manager your contacts simple way.</p>\r\n                    <p className=\"muted\">Version: 1.0.0</p>\r\n               </div>\r\n          )\r\n     }\r\n}","import React from 'react';\r\n\r\n\r\nconst PageNotFound = () => {\r\n\r\n     return (\r\n          <div className=\"card card-body text-center my-5\">\r\n               <h1 className=\"display-3 py-3\">Page Not Found | <span className=\"text-danger\">404</span></h1>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n               post: {\r\n                    id: '',\r\n                    title: '',\r\n                    body: ''\r\n               },\r\n               posts: []\r\n          }\r\n     }\r\n     componentDidMount() {\r\n          fetch('https://jsonplaceholder.typicode.com/posts')\r\n               .then(response => response.json())\r\n               .then(data => this.setState({ posts: data }));\r\n          // .then(data => {\r\n          //      data.map(post => console.log(post))\r\n          // })\r\n     }\r\n     render() {\r\n          const { posts } = this.state;\r\n          return (\r\n               <div className=\"card card-body\">\r\n                    <h2>Get Blog Requests</h2>\r\n                    {posts.map(post => (\r\n                         <div className=\"alert alert-success\">\r\n                              <h4>{post.title}</h4>\r\n                              <p className=\"lead\">{post.body}</p>\r\n                         </div>\r\n                    ))}\r\n\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Test;","import React from 'react';\nimport './App.css';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from './components/layouts/Navbar';\nimport Contacts from './components/contact/Contacts';\nimport AddContact from './components/contact/AddContact';\nimport EditContact from './components/contact/EditContact';\nimport About from './pages/About';\nimport PageNotFound from './pages/PageNotFound';\nimport Test from './test/Test';\n// import TestParams from './test/TestParams';\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"app\">\n          <Navbar branding=\"Contact Manager\" />\n\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Contacts />\n              </Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              {/* <Route exact path=\"/test/:name\" component={TestParams}></Route> */}\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n              <Route exact path=\"/test/request\" component={Test} />\n\n              <Route component={PageNotFound}>\n\n              </Route>\n            </Switch>\n          </div>\n\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}